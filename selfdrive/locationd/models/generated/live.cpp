#include "live.h"

namespace {
#define DIM 23
#define EDIM 22
#define MEDIM 22
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_3 = 3.8414588206941227;
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_19 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with sympy 1.7.1                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_8729358110465776939) {
   out_8729358110465776939[0] = 0;
   out_8729358110465776939[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_8729358110465776939[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_8729358110465776939[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_8729358110465776939[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_8729358110465776939[5] = -sin(in_vec[1]);
   out_8729358110465776939[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8729358110465776939[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8729358110465776939[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_8729358110465776939[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_8729358110465776939[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_8729358110465776939[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_8729358110465776939[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_8729358110465776939[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_8729358110465776939[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_8729358110465776939[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_8729358110465776939[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_8729358110465776939[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6985748779881356812) {
   out_6985748779881356812[0] = delta_x[0] + nom_x[0];
   out_6985748779881356812[1] = delta_x[1] + nom_x[1];
   out_6985748779881356812[2] = delta_x[2] + nom_x[2];
   out_6985748779881356812[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6985748779881356812[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6985748779881356812[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6985748779881356812[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6985748779881356812[7] = delta_x[6] + nom_x[7];
   out_6985748779881356812[8] = delta_x[7] + nom_x[8];
   out_6985748779881356812[9] = delta_x[8] + nom_x[9];
   out_6985748779881356812[10] = delta_x[9] + nom_x[10];
   out_6985748779881356812[11] = delta_x[10] + nom_x[11];
   out_6985748779881356812[12] = delta_x[11] + nom_x[12];
   out_6985748779881356812[13] = delta_x[12] + nom_x[13];
   out_6985748779881356812[14] = delta_x[13] + nom_x[14];
   out_6985748779881356812[15] = delta_x[14] + nom_x[15];
   out_6985748779881356812[16] = delta_x[15] + nom_x[16];
   out_6985748779881356812[17] = delta_x[16] + nom_x[17];
   out_6985748779881356812[18] = delta_x[17] + nom_x[18];
   out_6985748779881356812[19] = delta_x[18] + nom_x[19];
   out_6985748779881356812[20] = delta_x[19] + nom_x[20];
   out_6985748779881356812[21] = delta_x[20] + nom_x[21];
   out_6985748779881356812[22] = delta_x[21] + nom_x[22];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_7782584527847184999) {
   out_7782584527847184999[0] = -nom_x[0] + true_x[0];
   out_7782584527847184999[1] = -nom_x[1] + true_x[1];
   out_7782584527847184999[2] = -nom_x[2] + true_x[2];
   out_7782584527847184999[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_7782584527847184999[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_7782584527847184999[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_7782584527847184999[6] = -nom_x[7] + true_x[7];
   out_7782584527847184999[7] = -nom_x[8] + true_x[8];
   out_7782584527847184999[8] = -nom_x[9] + true_x[9];
   out_7782584527847184999[9] = -nom_x[10] + true_x[10];
   out_7782584527847184999[10] = -nom_x[11] + true_x[11];
   out_7782584527847184999[11] = -nom_x[12] + true_x[12];
   out_7782584527847184999[12] = -nom_x[13] + true_x[13];
   out_7782584527847184999[13] = -nom_x[14] + true_x[14];
   out_7782584527847184999[14] = -nom_x[15] + true_x[15];
   out_7782584527847184999[15] = -nom_x[16] + true_x[16];
   out_7782584527847184999[16] = -nom_x[17] + true_x[17];
   out_7782584527847184999[17] = -nom_x[18] + true_x[18];
   out_7782584527847184999[18] = -nom_x[19] + true_x[19];
   out_7782584527847184999[19] = -nom_x[20] + true_x[20];
   out_7782584527847184999[20] = -nom_x[21] + true_x[21];
   out_7782584527847184999[21] = -nom_x[22] + true_x[22];
}
void H_mod_fun(double *state, double *out_2807386512015406) {
   out_2807386512015406[0] = 1.0;
   out_2807386512015406[1] = 0.0;
   out_2807386512015406[2] = 0.0;
   out_2807386512015406[3] = 0.0;
   out_2807386512015406[4] = 0.0;
   out_2807386512015406[5] = 0.0;
   out_2807386512015406[6] = 0.0;
   out_2807386512015406[7] = 0.0;
   out_2807386512015406[8] = 0.0;
   out_2807386512015406[9] = 0.0;
   out_2807386512015406[10] = 0.0;
   out_2807386512015406[11] = 0.0;
   out_2807386512015406[12] = 0.0;
   out_2807386512015406[13] = 0.0;
   out_2807386512015406[14] = 0.0;
   out_2807386512015406[15] = 0.0;
   out_2807386512015406[16] = 0.0;
   out_2807386512015406[17] = 0.0;
   out_2807386512015406[18] = 0.0;
   out_2807386512015406[19] = 0.0;
   out_2807386512015406[20] = 0.0;
   out_2807386512015406[21] = 0.0;
   out_2807386512015406[22] = 0.0;
   out_2807386512015406[23] = 1.0;
   out_2807386512015406[24] = 0.0;
   out_2807386512015406[25] = 0.0;
   out_2807386512015406[26] = 0.0;
   out_2807386512015406[27] = 0.0;
   out_2807386512015406[28] = 0.0;
   out_2807386512015406[29] = 0.0;
   out_2807386512015406[30] = 0.0;
   out_2807386512015406[31] = 0.0;
   out_2807386512015406[32] = 0.0;
   out_2807386512015406[33] = 0.0;
   out_2807386512015406[34] = 0.0;
   out_2807386512015406[35] = 0.0;
   out_2807386512015406[36] = 0.0;
   out_2807386512015406[37] = 0.0;
   out_2807386512015406[38] = 0.0;
   out_2807386512015406[39] = 0.0;
   out_2807386512015406[40] = 0.0;
   out_2807386512015406[41] = 0.0;
   out_2807386512015406[42] = 0.0;
   out_2807386512015406[43] = 0.0;
   out_2807386512015406[44] = 0.0;
   out_2807386512015406[45] = 0.0;
   out_2807386512015406[46] = 1.0;
   out_2807386512015406[47] = 0.0;
   out_2807386512015406[48] = 0.0;
   out_2807386512015406[49] = 0.0;
   out_2807386512015406[50] = 0.0;
   out_2807386512015406[51] = 0.0;
   out_2807386512015406[52] = 0.0;
   out_2807386512015406[53] = 0.0;
   out_2807386512015406[54] = 0.0;
   out_2807386512015406[55] = 0.0;
   out_2807386512015406[56] = 0.0;
   out_2807386512015406[57] = 0.0;
   out_2807386512015406[58] = 0.0;
   out_2807386512015406[59] = 0.0;
   out_2807386512015406[60] = 0.0;
   out_2807386512015406[61] = 0.0;
   out_2807386512015406[62] = 0.0;
   out_2807386512015406[63] = 0.0;
   out_2807386512015406[64] = 0.0;
   out_2807386512015406[65] = 0.0;
   out_2807386512015406[66] = 0.0;
   out_2807386512015406[67] = 0.0;
   out_2807386512015406[68] = 0.0;
   out_2807386512015406[69] = -0.5*state[4];
   out_2807386512015406[70] = -0.5*state[5];
   out_2807386512015406[71] = -0.5*state[6];
   out_2807386512015406[72] = 0.0;
   out_2807386512015406[73] = 0.0;
   out_2807386512015406[74] = 0.0;
   out_2807386512015406[75] = 0.0;
   out_2807386512015406[76] = 0.0;
   out_2807386512015406[77] = 0.0;
   out_2807386512015406[78] = 0.0;
   out_2807386512015406[79] = 0.0;
   out_2807386512015406[80] = 0.0;
   out_2807386512015406[81] = 0.0;
   out_2807386512015406[82] = 0.0;
   out_2807386512015406[83] = 0.0;
   out_2807386512015406[84] = 0.0;
   out_2807386512015406[85] = 0.0;
   out_2807386512015406[86] = 0.0;
   out_2807386512015406[87] = 0.0;
   out_2807386512015406[88] = 0.0;
   out_2807386512015406[89] = 0.0;
   out_2807386512015406[90] = 0.0;
   out_2807386512015406[91] = 0.5*state[3];
   out_2807386512015406[92] = 0.5*state[6];
   out_2807386512015406[93] = -0.5*state[5];
   out_2807386512015406[94] = 0.0;
   out_2807386512015406[95] = 0.0;
   out_2807386512015406[96] = 0.0;
   out_2807386512015406[97] = 0.0;
   out_2807386512015406[98] = 0.0;
   out_2807386512015406[99] = 0.0;
   out_2807386512015406[100] = 0.0;
   out_2807386512015406[101] = 0.0;
   out_2807386512015406[102] = 0.0;
   out_2807386512015406[103] = 0.0;
   out_2807386512015406[104] = 0.0;
   out_2807386512015406[105] = 0.0;
   out_2807386512015406[106] = 0.0;
   out_2807386512015406[107] = 0.0;
   out_2807386512015406[108] = 0.0;
   out_2807386512015406[109] = 0.0;
   out_2807386512015406[110] = 0.0;
   out_2807386512015406[111] = 0.0;
   out_2807386512015406[112] = 0.0;
   out_2807386512015406[113] = -0.5*state[6];
   out_2807386512015406[114] = 0.5*state[3];
   out_2807386512015406[115] = 0.5*state[4];
   out_2807386512015406[116] = 0.0;
   out_2807386512015406[117] = 0.0;
   out_2807386512015406[118] = 0.0;
   out_2807386512015406[119] = 0.0;
   out_2807386512015406[120] = 0.0;
   out_2807386512015406[121] = 0.0;
   out_2807386512015406[122] = 0.0;
   out_2807386512015406[123] = 0.0;
   out_2807386512015406[124] = 0.0;
   out_2807386512015406[125] = 0.0;
   out_2807386512015406[126] = 0.0;
   out_2807386512015406[127] = 0.0;
   out_2807386512015406[128] = 0.0;
   out_2807386512015406[129] = 0.0;
   out_2807386512015406[130] = 0.0;
   out_2807386512015406[131] = 0.0;
   out_2807386512015406[132] = 0.0;
   out_2807386512015406[133] = 0.0;
   out_2807386512015406[134] = 0.0;
   out_2807386512015406[135] = 0.5*state[5];
   out_2807386512015406[136] = -0.5*state[4];
   out_2807386512015406[137] = 0.5*state[3];
   out_2807386512015406[138] = 0.0;
   out_2807386512015406[139] = 0.0;
   out_2807386512015406[140] = 0.0;
   out_2807386512015406[141] = 0.0;
   out_2807386512015406[142] = 0.0;
   out_2807386512015406[143] = 0.0;
   out_2807386512015406[144] = 0.0;
   out_2807386512015406[145] = 0.0;
   out_2807386512015406[146] = 0.0;
   out_2807386512015406[147] = 0.0;
   out_2807386512015406[148] = 0.0;
   out_2807386512015406[149] = 0.0;
   out_2807386512015406[150] = 0.0;
   out_2807386512015406[151] = 0.0;
   out_2807386512015406[152] = 0.0;
   out_2807386512015406[153] = 0.0;
   out_2807386512015406[154] = 0.0;
   out_2807386512015406[155] = 0.0;
   out_2807386512015406[156] = 0.0;
   out_2807386512015406[157] = 0.0;
   out_2807386512015406[158] = 0.0;
   out_2807386512015406[159] = 0.0;
   out_2807386512015406[160] = 1.0;
   out_2807386512015406[161] = 0.0;
   out_2807386512015406[162] = 0.0;
   out_2807386512015406[163] = 0.0;
   out_2807386512015406[164] = 0.0;
   out_2807386512015406[165] = 0.0;
   out_2807386512015406[166] = 0.0;
   out_2807386512015406[167] = 0.0;
   out_2807386512015406[168] = 0.0;
   out_2807386512015406[169] = 0.0;
   out_2807386512015406[170] = 0.0;
   out_2807386512015406[171] = 0.0;
   out_2807386512015406[172] = 0.0;
   out_2807386512015406[173] = 0.0;
   out_2807386512015406[174] = 0.0;
   out_2807386512015406[175] = 0.0;
   out_2807386512015406[176] = 0.0;
   out_2807386512015406[177] = 0.0;
   out_2807386512015406[178] = 0.0;
   out_2807386512015406[179] = 0.0;
   out_2807386512015406[180] = 0.0;
   out_2807386512015406[181] = 0.0;
   out_2807386512015406[182] = 0.0;
   out_2807386512015406[183] = 1.0;
   out_2807386512015406[184] = 0.0;
   out_2807386512015406[185] = 0.0;
   out_2807386512015406[186] = 0.0;
   out_2807386512015406[187] = 0.0;
   out_2807386512015406[188] = 0.0;
   out_2807386512015406[189] = 0.0;
   out_2807386512015406[190] = 0.0;
   out_2807386512015406[191] = 0.0;
   out_2807386512015406[192] = 0.0;
   out_2807386512015406[193] = 0.0;
   out_2807386512015406[194] = 0.0;
   out_2807386512015406[195] = 0.0;
   out_2807386512015406[196] = 0.0;
   out_2807386512015406[197] = 0.0;
   out_2807386512015406[198] = 0.0;
   out_2807386512015406[199] = 0.0;
   out_2807386512015406[200] = 0.0;
   out_2807386512015406[201] = 0.0;
   out_2807386512015406[202] = 0.0;
   out_2807386512015406[203] = 0.0;
   out_2807386512015406[204] = 0.0;
   out_2807386512015406[205] = 0.0;
   out_2807386512015406[206] = 1.0;
   out_2807386512015406[207] = 0.0;
   out_2807386512015406[208] = 0.0;
   out_2807386512015406[209] = 0.0;
   out_2807386512015406[210] = 0.0;
   out_2807386512015406[211] = 0.0;
   out_2807386512015406[212] = 0.0;
   out_2807386512015406[213] = 0.0;
   out_2807386512015406[214] = 0.0;
   out_2807386512015406[215] = 0.0;
   out_2807386512015406[216] = 0.0;
   out_2807386512015406[217] = 0.0;
   out_2807386512015406[218] = 0.0;
   out_2807386512015406[219] = 0.0;
   out_2807386512015406[220] = 0.0;
   out_2807386512015406[221] = 0.0;
   out_2807386512015406[222] = 0.0;
   out_2807386512015406[223] = 0.0;
   out_2807386512015406[224] = 0.0;
   out_2807386512015406[225] = 0.0;
   out_2807386512015406[226] = 0.0;
   out_2807386512015406[227] = 0.0;
   out_2807386512015406[228] = 0.0;
   out_2807386512015406[229] = 1.0;
   out_2807386512015406[230] = 0.0;
   out_2807386512015406[231] = 0.0;
   out_2807386512015406[232] = 0.0;
   out_2807386512015406[233] = 0.0;
   out_2807386512015406[234] = 0.0;
   out_2807386512015406[235] = 0.0;
   out_2807386512015406[236] = 0.0;
   out_2807386512015406[237] = 0.0;
   out_2807386512015406[238] = 0.0;
   out_2807386512015406[239] = 0.0;
   out_2807386512015406[240] = 0.0;
   out_2807386512015406[241] = 0.0;
   out_2807386512015406[242] = 0.0;
   out_2807386512015406[243] = 0.0;
   out_2807386512015406[244] = 0.0;
   out_2807386512015406[245] = 0.0;
   out_2807386512015406[246] = 0.0;
   out_2807386512015406[247] = 0.0;
   out_2807386512015406[248] = 0.0;
   out_2807386512015406[249] = 0.0;
   out_2807386512015406[250] = 0.0;
   out_2807386512015406[251] = 0.0;
   out_2807386512015406[252] = 1.0;
   out_2807386512015406[253] = 0.0;
   out_2807386512015406[254] = 0.0;
   out_2807386512015406[255] = 0.0;
   out_2807386512015406[256] = 0.0;
   out_2807386512015406[257] = 0.0;
   out_2807386512015406[258] = 0.0;
   out_2807386512015406[259] = 0.0;
   out_2807386512015406[260] = 0.0;
   out_2807386512015406[261] = 0.0;
   out_2807386512015406[262] = 0.0;
   out_2807386512015406[263] = 0.0;
   out_2807386512015406[264] = 0.0;
   out_2807386512015406[265] = 0.0;
   out_2807386512015406[266] = 0.0;
   out_2807386512015406[267] = 0.0;
   out_2807386512015406[268] = 0.0;
   out_2807386512015406[269] = 0.0;
   out_2807386512015406[270] = 0.0;
   out_2807386512015406[271] = 0.0;
   out_2807386512015406[272] = 0.0;
   out_2807386512015406[273] = 0.0;
   out_2807386512015406[274] = 0.0;
   out_2807386512015406[275] = 1.0;
   out_2807386512015406[276] = 0.0;
   out_2807386512015406[277] = 0.0;
   out_2807386512015406[278] = 0.0;
   out_2807386512015406[279] = 0.0;
   out_2807386512015406[280] = 0.0;
   out_2807386512015406[281] = 0.0;
   out_2807386512015406[282] = 0.0;
   out_2807386512015406[283] = 0.0;
   out_2807386512015406[284] = 0.0;
   out_2807386512015406[285] = 0.0;
   out_2807386512015406[286] = 0.0;
   out_2807386512015406[287] = 0.0;
   out_2807386512015406[288] = 0.0;
   out_2807386512015406[289] = 0.0;
   out_2807386512015406[290] = 0.0;
   out_2807386512015406[291] = 0.0;
   out_2807386512015406[292] = 0.0;
   out_2807386512015406[293] = 0.0;
   out_2807386512015406[294] = 0.0;
   out_2807386512015406[295] = 0.0;
   out_2807386512015406[296] = 0.0;
   out_2807386512015406[297] = 0.0;
   out_2807386512015406[298] = 1.0;
   out_2807386512015406[299] = 0.0;
   out_2807386512015406[300] = 0.0;
   out_2807386512015406[301] = 0.0;
   out_2807386512015406[302] = 0.0;
   out_2807386512015406[303] = 0.0;
   out_2807386512015406[304] = 0.0;
   out_2807386512015406[305] = 0.0;
   out_2807386512015406[306] = 0.0;
   out_2807386512015406[307] = 0.0;
   out_2807386512015406[308] = 0.0;
   out_2807386512015406[309] = 0.0;
   out_2807386512015406[310] = 0.0;
   out_2807386512015406[311] = 0.0;
   out_2807386512015406[312] = 0.0;
   out_2807386512015406[313] = 0.0;
   out_2807386512015406[314] = 0.0;
   out_2807386512015406[315] = 0.0;
   out_2807386512015406[316] = 0.0;
   out_2807386512015406[317] = 0.0;
   out_2807386512015406[318] = 0.0;
   out_2807386512015406[319] = 0.0;
   out_2807386512015406[320] = 0.0;
   out_2807386512015406[321] = 1.0;
   out_2807386512015406[322] = 0.0;
   out_2807386512015406[323] = 0.0;
   out_2807386512015406[324] = 0.0;
   out_2807386512015406[325] = 0.0;
   out_2807386512015406[326] = 0.0;
   out_2807386512015406[327] = 0.0;
   out_2807386512015406[328] = 0.0;
   out_2807386512015406[329] = 0.0;
   out_2807386512015406[330] = 0.0;
   out_2807386512015406[331] = 0.0;
   out_2807386512015406[332] = 0.0;
   out_2807386512015406[333] = 0.0;
   out_2807386512015406[334] = 0.0;
   out_2807386512015406[335] = 0.0;
   out_2807386512015406[336] = 0.0;
   out_2807386512015406[337] = 0.0;
   out_2807386512015406[338] = 0.0;
   out_2807386512015406[339] = 0.0;
   out_2807386512015406[340] = 0.0;
   out_2807386512015406[341] = 0.0;
   out_2807386512015406[342] = 0.0;
   out_2807386512015406[343] = 0.0;
   out_2807386512015406[344] = 1.0;
   out_2807386512015406[345] = 0.0;
   out_2807386512015406[346] = 0.0;
   out_2807386512015406[347] = 0.0;
   out_2807386512015406[348] = 0.0;
   out_2807386512015406[349] = 0.0;
   out_2807386512015406[350] = 0.0;
   out_2807386512015406[351] = 0.0;
   out_2807386512015406[352] = 0.0;
   out_2807386512015406[353] = 0.0;
   out_2807386512015406[354] = 0.0;
   out_2807386512015406[355] = 0.0;
   out_2807386512015406[356] = 0.0;
   out_2807386512015406[357] = 0.0;
   out_2807386512015406[358] = 0.0;
   out_2807386512015406[359] = 0.0;
   out_2807386512015406[360] = 0.0;
   out_2807386512015406[361] = 0.0;
   out_2807386512015406[362] = 0.0;
   out_2807386512015406[363] = 0.0;
   out_2807386512015406[364] = 0.0;
   out_2807386512015406[365] = 0.0;
   out_2807386512015406[366] = 0.0;
   out_2807386512015406[367] = 1.0;
   out_2807386512015406[368] = 0.0;
   out_2807386512015406[369] = 0.0;
   out_2807386512015406[370] = 0.0;
   out_2807386512015406[371] = 0.0;
   out_2807386512015406[372] = 0.0;
   out_2807386512015406[373] = 0.0;
   out_2807386512015406[374] = 0.0;
   out_2807386512015406[375] = 0.0;
   out_2807386512015406[376] = 0.0;
   out_2807386512015406[377] = 0.0;
   out_2807386512015406[378] = 0.0;
   out_2807386512015406[379] = 0.0;
   out_2807386512015406[380] = 0.0;
   out_2807386512015406[381] = 0.0;
   out_2807386512015406[382] = 0.0;
   out_2807386512015406[383] = 0.0;
   out_2807386512015406[384] = 0.0;
   out_2807386512015406[385] = 0.0;
   out_2807386512015406[386] = 0.0;
   out_2807386512015406[387] = 0.0;
   out_2807386512015406[388] = 0.0;
   out_2807386512015406[389] = 0.0;
   out_2807386512015406[390] = 1.0;
   out_2807386512015406[391] = 0.0;
   out_2807386512015406[392] = 0.0;
   out_2807386512015406[393] = 0.0;
   out_2807386512015406[394] = 0.0;
   out_2807386512015406[395] = 0.0;
   out_2807386512015406[396] = 0.0;
   out_2807386512015406[397] = 0.0;
   out_2807386512015406[398] = 0.0;
   out_2807386512015406[399] = 0.0;
   out_2807386512015406[400] = 0.0;
   out_2807386512015406[401] = 0.0;
   out_2807386512015406[402] = 0.0;
   out_2807386512015406[403] = 0.0;
   out_2807386512015406[404] = 0.0;
   out_2807386512015406[405] = 0.0;
   out_2807386512015406[406] = 0.0;
   out_2807386512015406[407] = 0.0;
   out_2807386512015406[408] = 0.0;
   out_2807386512015406[409] = 0.0;
   out_2807386512015406[410] = 0.0;
   out_2807386512015406[411] = 0.0;
   out_2807386512015406[412] = 0.0;
   out_2807386512015406[413] = 1.0;
   out_2807386512015406[414] = 0.0;
   out_2807386512015406[415] = 0.0;
   out_2807386512015406[416] = 0.0;
   out_2807386512015406[417] = 0.0;
   out_2807386512015406[418] = 0.0;
   out_2807386512015406[419] = 0.0;
   out_2807386512015406[420] = 0.0;
   out_2807386512015406[421] = 0.0;
   out_2807386512015406[422] = 0.0;
   out_2807386512015406[423] = 0.0;
   out_2807386512015406[424] = 0.0;
   out_2807386512015406[425] = 0.0;
   out_2807386512015406[426] = 0.0;
   out_2807386512015406[427] = 0.0;
   out_2807386512015406[428] = 0.0;
   out_2807386512015406[429] = 0.0;
   out_2807386512015406[430] = 0.0;
   out_2807386512015406[431] = 0.0;
   out_2807386512015406[432] = 0.0;
   out_2807386512015406[433] = 0.0;
   out_2807386512015406[434] = 0.0;
   out_2807386512015406[435] = 0.0;
   out_2807386512015406[436] = 1.0;
   out_2807386512015406[437] = 0.0;
   out_2807386512015406[438] = 0.0;
   out_2807386512015406[439] = 0.0;
   out_2807386512015406[440] = 0.0;
   out_2807386512015406[441] = 0.0;
   out_2807386512015406[442] = 0.0;
   out_2807386512015406[443] = 0.0;
   out_2807386512015406[444] = 0.0;
   out_2807386512015406[445] = 0.0;
   out_2807386512015406[446] = 0.0;
   out_2807386512015406[447] = 0.0;
   out_2807386512015406[448] = 0.0;
   out_2807386512015406[449] = 0.0;
   out_2807386512015406[450] = 0.0;
   out_2807386512015406[451] = 0.0;
   out_2807386512015406[452] = 0.0;
   out_2807386512015406[453] = 0.0;
   out_2807386512015406[454] = 0.0;
   out_2807386512015406[455] = 0.0;
   out_2807386512015406[456] = 0.0;
   out_2807386512015406[457] = 0.0;
   out_2807386512015406[458] = 0.0;
   out_2807386512015406[459] = 1.0;
   out_2807386512015406[460] = 0.0;
   out_2807386512015406[461] = 0.0;
   out_2807386512015406[462] = 0.0;
   out_2807386512015406[463] = 0.0;
   out_2807386512015406[464] = 0.0;
   out_2807386512015406[465] = 0.0;
   out_2807386512015406[466] = 0.0;
   out_2807386512015406[467] = 0.0;
   out_2807386512015406[468] = 0.0;
   out_2807386512015406[469] = 0.0;
   out_2807386512015406[470] = 0.0;
   out_2807386512015406[471] = 0.0;
   out_2807386512015406[472] = 0.0;
   out_2807386512015406[473] = 0.0;
   out_2807386512015406[474] = 0.0;
   out_2807386512015406[475] = 0.0;
   out_2807386512015406[476] = 0.0;
   out_2807386512015406[477] = 0.0;
   out_2807386512015406[478] = 0.0;
   out_2807386512015406[479] = 0.0;
   out_2807386512015406[480] = 0.0;
   out_2807386512015406[481] = 0.0;
   out_2807386512015406[482] = 1.0;
   out_2807386512015406[483] = 0.0;
   out_2807386512015406[484] = 0.0;
   out_2807386512015406[485] = 0.0;
   out_2807386512015406[486] = 0.0;
   out_2807386512015406[487] = 0.0;
   out_2807386512015406[488] = 0.0;
   out_2807386512015406[489] = 0.0;
   out_2807386512015406[490] = 0.0;
   out_2807386512015406[491] = 0.0;
   out_2807386512015406[492] = 0.0;
   out_2807386512015406[493] = 0.0;
   out_2807386512015406[494] = 0.0;
   out_2807386512015406[495] = 0.0;
   out_2807386512015406[496] = 0.0;
   out_2807386512015406[497] = 0.0;
   out_2807386512015406[498] = 0.0;
   out_2807386512015406[499] = 0.0;
   out_2807386512015406[500] = 0.0;
   out_2807386512015406[501] = 0.0;
   out_2807386512015406[502] = 0.0;
   out_2807386512015406[503] = 0.0;
   out_2807386512015406[504] = 0.0;
   out_2807386512015406[505] = 1.0;
}
void f_fun(double *state, double dt, double *out_460231330011564285) {
   out_460231330011564285[0] = dt*state[7] + state[0];
   out_460231330011564285[1] = dt*state[8] + state[1];
   out_460231330011564285[2] = dt*state[9] + state[2];
   out_460231330011564285[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_460231330011564285[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_460231330011564285[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_460231330011564285[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_460231330011564285[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[19] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[18] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[7];
   out_460231330011564285[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[19] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[18]) + state[8];
   out_460231330011564285[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]) + state[9];
   out_460231330011564285[10] = state[10];
   out_460231330011564285[11] = state[11];
   out_460231330011564285[12] = state[12];
   out_460231330011564285[13] = state[13];
   out_460231330011564285[14] = state[14];
   out_460231330011564285[15] = state[15];
   out_460231330011564285[16] = state[16];
   out_460231330011564285[17] = state[17];
   out_460231330011564285[18] = state[18];
   out_460231330011564285[19] = state[19];
   out_460231330011564285[20] = state[20];
   out_460231330011564285[21] = state[21];
   out_460231330011564285[22] = state[22];
}
void F_fun(double *state, double dt, double *out_2331054952450132772) {
   out_2331054952450132772[0] = 1;
   out_2331054952450132772[1] = 0;
   out_2331054952450132772[2] = 0;
   out_2331054952450132772[3] = 0;
   out_2331054952450132772[4] = 0;
   out_2331054952450132772[5] = 0;
   out_2331054952450132772[6] = dt;
   out_2331054952450132772[7] = 0;
   out_2331054952450132772[8] = 0;
   out_2331054952450132772[9] = 0;
   out_2331054952450132772[10] = 0;
   out_2331054952450132772[11] = 0;
   out_2331054952450132772[12] = 0;
   out_2331054952450132772[13] = 0;
   out_2331054952450132772[14] = 0;
   out_2331054952450132772[15] = 0;
   out_2331054952450132772[16] = 0;
   out_2331054952450132772[17] = 0;
   out_2331054952450132772[18] = 0;
   out_2331054952450132772[19] = 0;
   out_2331054952450132772[20] = 0;
   out_2331054952450132772[21] = 0;
   out_2331054952450132772[22] = 0;
   out_2331054952450132772[23] = 1;
   out_2331054952450132772[24] = 0;
   out_2331054952450132772[25] = 0;
   out_2331054952450132772[26] = 0;
   out_2331054952450132772[27] = 0;
   out_2331054952450132772[28] = 0;
   out_2331054952450132772[29] = dt;
   out_2331054952450132772[30] = 0;
   out_2331054952450132772[31] = 0;
   out_2331054952450132772[32] = 0;
   out_2331054952450132772[33] = 0;
   out_2331054952450132772[34] = 0;
   out_2331054952450132772[35] = 0;
   out_2331054952450132772[36] = 0;
   out_2331054952450132772[37] = 0;
   out_2331054952450132772[38] = 0;
   out_2331054952450132772[39] = 0;
   out_2331054952450132772[40] = 0;
   out_2331054952450132772[41] = 0;
   out_2331054952450132772[42] = 0;
   out_2331054952450132772[43] = 0;
   out_2331054952450132772[44] = 0;
   out_2331054952450132772[45] = 0;
   out_2331054952450132772[46] = 1;
   out_2331054952450132772[47] = 0;
   out_2331054952450132772[48] = 0;
   out_2331054952450132772[49] = 0;
   out_2331054952450132772[50] = 0;
   out_2331054952450132772[51] = 0;
   out_2331054952450132772[52] = dt;
   out_2331054952450132772[53] = 0;
   out_2331054952450132772[54] = 0;
   out_2331054952450132772[55] = 0;
   out_2331054952450132772[56] = 0;
   out_2331054952450132772[57] = 0;
   out_2331054952450132772[58] = 0;
   out_2331054952450132772[59] = 0;
   out_2331054952450132772[60] = 0;
   out_2331054952450132772[61] = 0;
   out_2331054952450132772[62] = 0;
   out_2331054952450132772[63] = 0;
   out_2331054952450132772[64] = 0;
   out_2331054952450132772[65] = 0;
   out_2331054952450132772[66] = 0;
   out_2331054952450132772[67] = 0;
   out_2331054952450132772[68] = 0;
   out_2331054952450132772[69] = 1;
   out_2331054952450132772[70] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2331054952450132772[71] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2331054952450132772[72] = 0;
   out_2331054952450132772[73] = 0;
   out_2331054952450132772[74] = 0;
   out_2331054952450132772[75] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2331054952450132772[76] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2331054952450132772[77] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2331054952450132772[78] = 0;
   out_2331054952450132772[79] = 0;
   out_2331054952450132772[80] = 0;
   out_2331054952450132772[81] = 0;
   out_2331054952450132772[82] = 0;
   out_2331054952450132772[83] = 0;
   out_2331054952450132772[84] = 0;
   out_2331054952450132772[85] = 0;
   out_2331054952450132772[86] = 0;
   out_2331054952450132772[87] = 0;
   out_2331054952450132772[88] = 0;
   out_2331054952450132772[89] = 0;
   out_2331054952450132772[90] = 0;
   out_2331054952450132772[91] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2331054952450132772[92] = 1;
   out_2331054952450132772[93] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2331054952450132772[94] = 0;
   out_2331054952450132772[95] = 0;
   out_2331054952450132772[96] = 0;
   out_2331054952450132772[97] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2331054952450132772[98] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2331054952450132772[99] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2331054952450132772[100] = 0;
   out_2331054952450132772[101] = 0;
   out_2331054952450132772[102] = 0;
   out_2331054952450132772[103] = 0;
   out_2331054952450132772[104] = 0;
   out_2331054952450132772[105] = 0;
   out_2331054952450132772[106] = 0;
   out_2331054952450132772[107] = 0;
   out_2331054952450132772[108] = 0;
   out_2331054952450132772[109] = 0;
   out_2331054952450132772[110] = 0;
   out_2331054952450132772[111] = 0;
   out_2331054952450132772[112] = 0;
   out_2331054952450132772[113] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2331054952450132772[114] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2331054952450132772[115] = 1;
   out_2331054952450132772[116] = 0;
   out_2331054952450132772[117] = 0;
   out_2331054952450132772[118] = 0;
   out_2331054952450132772[119] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2331054952450132772[120] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2331054952450132772[121] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2331054952450132772[122] = 0;
   out_2331054952450132772[123] = 0;
   out_2331054952450132772[124] = 0;
   out_2331054952450132772[125] = 0;
   out_2331054952450132772[126] = 0;
   out_2331054952450132772[127] = 0;
   out_2331054952450132772[128] = 0;
   out_2331054952450132772[129] = 0;
   out_2331054952450132772[130] = 0;
   out_2331054952450132772[131] = 0;
   out_2331054952450132772[132] = 0;
   out_2331054952450132772[133] = 0;
   out_2331054952450132772[134] = 0;
   out_2331054952450132772[135] = 0;
   out_2331054952450132772[136] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]);
   out_2331054952450132772[137] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[19] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2331054952450132772[138] = 1;
   out_2331054952450132772[139] = 0;
   out_2331054952450132772[140] = 0;
   out_2331054952450132772[141] = 0;
   out_2331054952450132772[142] = 0;
   out_2331054952450132772[143] = 0;
   out_2331054952450132772[144] = 0;
   out_2331054952450132772[145] = 0;
   out_2331054952450132772[146] = 0;
   out_2331054952450132772[147] = 0;
   out_2331054952450132772[148] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2331054952450132772[149] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2331054952450132772[150] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2331054952450132772[151] = 0;
   out_2331054952450132772[152] = 0;
   out_2331054952450132772[153] = 0;
   out_2331054952450132772[154] = 0;
   out_2331054952450132772[155] = 0;
   out_2331054952450132772[156] = 0;
   out_2331054952450132772[157] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[18] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[17] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[19]);
   out_2331054952450132772[158] = 0;
   out_2331054952450132772[159] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[19] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[18] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2331054952450132772[160] = 0;
   out_2331054952450132772[161] = 1;
   out_2331054952450132772[162] = 0;
   out_2331054952450132772[163] = 0;
   out_2331054952450132772[164] = 0;
   out_2331054952450132772[165] = 0;
   out_2331054952450132772[166] = 0;
   out_2331054952450132772[167] = 0;
   out_2331054952450132772[168] = 0;
   out_2331054952450132772[169] = 0;
   out_2331054952450132772[170] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2331054952450132772[171] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2331054952450132772[172] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2331054952450132772[173] = 0;
   out_2331054952450132772[174] = 0;
   out_2331054952450132772[175] = 0;
   out_2331054952450132772[176] = 0;
   out_2331054952450132772[177] = 0;
   out_2331054952450132772[178] = 0;
   out_2331054952450132772[179] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[19] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[18]);
   out_2331054952450132772[180] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[19] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[18] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2331054952450132772[181] = 0;
   out_2331054952450132772[182] = 0;
   out_2331054952450132772[183] = 0;
   out_2331054952450132772[184] = 1;
   out_2331054952450132772[185] = 0;
   out_2331054952450132772[186] = 0;
   out_2331054952450132772[187] = 0;
   out_2331054952450132772[188] = 0;
   out_2331054952450132772[189] = 0;
   out_2331054952450132772[190] = 0;
   out_2331054952450132772[191] = 0;
   out_2331054952450132772[192] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2331054952450132772[193] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2331054952450132772[194] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2331054952450132772[195] = 0;
   out_2331054952450132772[196] = 0;
   out_2331054952450132772[197] = 0;
   out_2331054952450132772[198] = 0;
   out_2331054952450132772[199] = 0;
   out_2331054952450132772[200] = 0;
   out_2331054952450132772[201] = 0;
   out_2331054952450132772[202] = 0;
   out_2331054952450132772[203] = 0;
   out_2331054952450132772[204] = 0;
   out_2331054952450132772[205] = 0;
   out_2331054952450132772[206] = 0;
   out_2331054952450132772[207] = 1;
   out_2331054952450132772[208] = 0;
   out_2331054952450132772[209] = 0;
   out_2331054952450132772[210] = 0;
   out_2331054952450132772[211] = 0;
   out_2331054952450132772[212] = 0;
   out_2331054952450132772[213] = 0;
   out_2331054952450132772[214] = 0;
   out_2331054952450132772[215] = 0;
   out_2331054952450132772[216] = 0;
   out_2331054952450132772[217] = 0;
   out_2331054952450132772[218] = 0;
   out_2331054952450132772[219] = 0;
   out_2331054952450132772[220] = 0;
   out_2331054952450132772[221] = 0;
   out_2331054952450132772[222] = 0;
   out_2331054952450132772[223] = 0;
   out_2331054952450132772[224] = 0;
   out_2331054952450132772[225] = 0;
   out_2331054952450132772[226] = 0;
   out_2331054952450132772[227] = 0;
   out_2331054952450132772[228] = 0;
   out_2331054952450132772[229] = 0;
   out_2331054952450132772[230] = 1;
   out_2331054952450132772[231] = 0;
   out_2331054952450132772[232] = 0;
   out_2331054952450132772[233] = 0;
   out_2331054952450132772[234] = 0;
   out_2331054952450132772[235] = 0;
   out_2331054952450132772[236] = 0;
   out_2331054952450132772[237] = 0;
   out_2331054952450132772[238] = 0;
   out_2331054952450132772[239] = 0;
   out_2331054952450132772[240] = 0;
   out_2331054952450132772[241] = 0;
   out_2331054952450132772[242] = 0;
   out_2331054952450132772[243] = 0;
   out_2331054952450132772[244] = 0;
   out_2331054952450132772[245] = 0;
   out_2331054952450132772[246] = 0;
   out_2331054952450132772[247] = 0;
   out_2331054952450132772[248] = 0;
   out_2331054952450132772[249] = 0;
   out_2331054952450132772[250] = 0;
   out_2331054952450132772[251] = 0;
   out_2331054952450132772[252] = 0;
   out_2331054952450132772[253] = 1;
   out_2331054952450132772[254] = 0;
   out_2331054952450132772[255] = 0;
   out_2331054952450132772[256] = 0;
   out_2331054952450132772[257] = 0;
   out_2331054952450132772[258] = 0;
   out_2331054952450132772[259] = 0;
   out_2331054952450132772[260] = 0;
   out_2331054952450132772[261] = 0;
   out_2331054952450132772[262] = 0;
   out_2331054952450132772[263] = 0;
   out_2331054952450132772[264] = 0;
   out_2331054952450132772[265] = 0;
   out_2331054952450132772[266] = 0;
   out_2331054952450132772[267] = 0;
   out_2331054952450132772[268] = 0;
   out_2331054952450132772[269] = 0;
   out_2331054952450132772[270] = 0;
   out_2331054952450132772[271] = 0;
   out_2331054952450132772[272] = 0;
   out_2331054952450132772[273] = 0;
   out_2331054952450132772[274] = 0;
   out_2331054952450132772[275] = 0;
   out_2331054952450132772[276] = 1;
   out_2331054952450132772[277] = 0;
   out_2331054952450132772[278] = 0;
   out_2331054952450132772[279] = 0;
   out_2331054952450132772[280] = 0;
   out_2331054952450132772[281] = 0;
   out_2331054952450132772[282] = 0;
   out_2331054952450132772[283] = 0;
   out_2331054952450132772[284] = 0;
   out_2331054952450132772[285] = 0;
   out_2331054952450132772[286] = 0;
   out_2331054952450132772[287] = 0;
   out_2331054952450132772[288] = 0;
   out_2331054952450132772[289] = 0;
   out_2331054952450132772[290] = 0;
   out_2331054952450132772[291] = 0;
   out_2331054952450132772[292] = 0;
   out_2331054952450132772[293] = 0;
   out_2331054952450132772[294] = 0;
   out_2331054952450132772[295] = 0;
   out_2331054952450132772[296] = 0;
   out_2331054952450132772[297] = 0;
   out_2331054952450132772[298] = 0;
   out_2331054952450132772[299] = 1;
   out_2331054952450132772[300] = 0;
   out_2331054952450132772[301] = 0;
   out_2331054952450132772[302] = 0;
   out_2331054952450132772[303] = 0;
   out_2331054952450132772[304] = 0;
   out_2331054952450132772[305] = 0;
   out_2331054952450132772[306] = 0;
   out_2331054952450132772[307] = 0;
   out_2331054952450132772[308] = 0;
   out_2331054952450132772[309] = 0;
   out_2331054952450132772[310] = 0;
   out_2331054952450132772[311] = 0;
   out_2331054952450132772[312] = 0;
   out_2331054952450132772[313] = 0;
   out_2331054952450132772[314] = 0;
   out_2331054952450132772[315] = 0;
   out_2331054952450132772[316] = 0;
   out_2331054952450132772[317] = 0;
   out_2331054952450132772[318] = 0;
   out_2331054952450132772[319] = 0;
   out_2331054952450132772[320] = 0;
   out_2331054952450132772[321] = 0;
   out_2331054952450132772[322] = 1;
   out_2331054952450132772[323] = 0;
   out_2331054952450132772[324] = 0;
   out_2331054952450132772[325] = 0;
   out_2331054952450132772[326] = 0;
   out_2331054952450132772[327] = 0;
   out_2331054952450132772[328] = 0;
   out_2331054952450132772[329] = 0;
   out_2331054952450132772[330] = 0;
   out_2331054952450132772[331] = 0;
   out_2331054952450132772[332] = 0;
   out_2331054952450132772[333] = 0;
   out_2331054952450132772[334] = 0;
   out_2331054952450132772[335] = 0;
   out_2331054952450132772[336] = 0;
   out_2331054952450132772[337] = 0;
   out_2331054952450132772[338] = 0;
   out_2331054952450132772[339] = 0;
   out_2331054952450132772[340] = 0;
   out_2331054952450132772[341] = 0;
   out_2331054952450132772[342] = 0;
   out_2331054952450132772[343] = 0;
   out_2331054952450132772[344] = 0;
   out_2331054952450132772[345] = 1;
   out_2331054952450132772[346] = 0;
   out_2331054952450132772[347] = 0;
   out_2331054952450132772[348] = 0;
   out_2331054952450132772[349] = 0;
   out_2331054952450132772[350] = 0;
   out_2331054952450132772[351] = 0;
   out_2331054952450132772[352] = 0;
   out_2331054952450132772[353] = 0;
   out_2331054952450132772[354] = 0;
   out_2331054952450132772[355] = 0;
   out_2331054952450132772[356] = 0;
   out_2331054952450132772[357] = 0;
   out_2331054952450132772[358] = 0;
   out_2331054952450132772[359] = 0;
   out_2331054952450132772[360] = 0;
   out_2331054952450132772[361] = 0;
   out_2331054952450132772[362] = 0;
   out_2331054952450132772[363] = 0;
   out_2331054952450132772[364] = 0;
   out_2331054952450132772[365] = 0;
   out_2331054952450132772[366] = 0;
   out_2331054952450132772[367] = 0;
   out_2331054952450132772[368] = 1;
   out_2331054952450132772[369] = 0;
   out_2331054952450132772[370] = 0;
   out_2331054952450132772[371] = 0;
   out_2331054952450132772[372] = 0;
   out_2331054952450132772[373] = 0;
   out_2331054952450132772[374] = 0;
   out_2331054952450132772[375] = 0;
   out_2331054952450132772[376] = 0;
   out_2331054952450132772[377] = 0;
   out_2331054952450132772[378] = 0;
   out_2331054952450132772[379] = 0;
   out_2331054952450132772[380] = 0;
   out_2331054952450132772[381] = 0;
   out_2331054952450132772[382] = 0;
   out_2331054952450132772[383] = 0;
   out_2331054952450132772[384] = 0;
   out_2331054952450132772[385] = 0;
   out_2331054952450132772[386] = 0;
   out_2331054952450132772[387] = 0;
   out_2331054952450132772[388] = 0;
   out_2331054952450132772[389] = 0;
   out_2331054952450132772[390] = 0;
   out_2331054952450132772[391] = 1;
   out_2331054952450132772[392] = 0;
   out_2331054952450132772[393] = 0;
   out_2331054952450132772[394] = 0;
   out_2331054952450132772[395] = 0;
   out_2331054952450132772[396] = 0;
   out_2331054952450132772[397] = 0;
   out_2331054952450132772[398] = 0;
   out_2331054952450132772[399] = 0;
   out_2331054952450132772[400] = 0;
   out_2331054952450132772[401] = 0;
   out_2331054952450132772[402] = 0;
   out_2331054952450132772[403] = 0;
   out_2331054952450132772[404] = 0;
   out_2331054952450132772[405] = 0;
   out_2331054952450132772[406] = 0;
   out_2331054952450132772[407] = 0;
   out_2331054952450132772[408] = 0;
   out_2331054952450132772[409] = 0;
   out_2331054952450132772[410] = 0;
   out_2331054952450132772[411] = 0;
   out_2331054952450132772[412] = 0;
   out_2331054952450132772[413] = 0;
   out_2331054952450132772[414] = 1;
   out_2331054952450132772[415] = 0;
   out_2331054952450132772[416] = 0;
   out_2331054952450132772[417] = 0;
   out_2331054952450132772[418] = 0;
   out_2331054952450132772[419] = 0;
   out_2331054952450132772[420] = 0;
   out_2331054952450132772[421] = 0;
   out_2331054952450132772[422] = 0;
   out_2331054952450132772[423] = 0;
   out_2331054952450132772[424] = 0;
   out_2331054952450132772[425] = 0;
   out_2331054952450132772[426] = 0;
   out_2331054952450132772[427] = 0;
   out_2331054952450132772[428] = 0;
   out_2331054952450132772[429] = 0;
   out_2331054952450132772[430] = 0;
   out_2331054952450132772[431] = 0;
   out_2331054952450132772[432] = 0;
   out_2331054952450132772[433] = 0;
   out_2331054952450132772[434] = 0;
   out_2331054952450132772[435] = 0;
   out_2331054952450132772[436] = 0;
   out_2331054952450132772[437] = 1;
   out_2331054952450132772[438] = 0;
   out_2331054952450132772[439] = 0;
   out_2331054952450132772[440] = 0;
   out_2331054952450132772[441] = 0;
   out_2331054952450132772[442] = 0;
   out_2331054952450132772[443] = 0;
   out_2331054952450132772[444] = 0;
   out_2331054952450132772[445] = 0;
   out_2331054952450132772[446] = 0;
   out_2331054952450132772[447] = 0;
   out_2331054952450132772[448] = 0;
   out_2331054952450132772[449] = 0;
   out_2331054952450132772[450] = 0;
   out_2331054952450132772[451] = 0;
   out_2331054952450132772[452] = 0;
   out_2331054952450132772[453] = 0;
   out_2331054952450132772[454] = 0;
   out_2331054952450132772[455] = 0;
   out_2331054952450132772[456] = 0;
   out_2331054952450132772[457] = 0;
   out_2331054952450132772[458] = 0;
   out_2331054952450132772[459] = 0;
   out_2331054952450132772[460] = 1;
   out_2331054952450132772[461] = 0;
   out_2331054952450132772[462] = 0;
   out_2331054952450132772[463] = 0;
   out_2331054952450132772[464] = 0;
   out_2331054952450132772[465] = 0;
   out_2331054952450132772[466] = 0;
   out_2331054952450132772[467] = 0;
   out_2331054952450132772[468] = 0;
   out_2331054952450132772[469] = 0;
   out_2331054952450132772[470] = 0;
   out_2331054952450132772[471] = 0;
   out_2331054952450132772[472] = 0;
   out_2331054952450132772[473] = 0;
   out_2331054952450132772[474] = 0;
   out_2331054952450132772[475] = 0;
   out_2331054952450132772[476] = 0;
   out_2331054952450132772[477] = 0;
   out_2331054952450132772[478] = 0;
   out_2331054952450132772[479] = 0;
   out_2331054952450132772[480] = 0;
   out_2331054952450132772[481] = 0;
   out_2331054952450132772[482] = 0;
   out_2331054952450132772[483] = 1;
}
void h_3(double *state, double *unused, double *out_8586752585035404355) {
   out_8586752585035404355[0] = sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7)*state[16];
}
void H_3(double *state, double *unused, double *out_5698610554807408040) {
   out_5698610554807408040[0] = 0;
   out_5698610554807408040[1] = 0;
   out_5698610554807408040[2] = 0;
   out_5698610554807408040[3] = 0;
   out_5698610554807408040[4] = 0;
   out_5698610554807408040[5] = 0;
   out_5698610554807408040[6] = 0;
   out_5698610554807408040[7] = state[7]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_5698610554807408040[8] = state[8]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_5698610554807408040[9] = state[9]*state[16]/sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_5698610554807408040[10] = 0;
   out_5698610554807408040[11] = 0;
   out_5698610554807408040[12] = 0;
   out_5698610554807408040[13] = 0;
   out_5698610554807408040[14] = 0;
   out_5698610554807408040[15] = 0;
   out_5698610554807408040[16] = sqrt(pow(state[7], 2) + pow(state[8], 2) + pow(state[9], 2) + 9.9999999999999995e-7);
   out_5698610554807408040[17] = 0;
   out_5698610554807408040[18] = 0;
   out_5698610554807408040[19] = 0;
   out_5698610554807408040[20] = 0;
   out_5698610554807408040[21] = 0;
   out_5698610554807408040[22] = 0;
}
void h_4(double *state, double *unused, double *out_8540102027610099) {
   out_8540102027610099[0] = state[10] + state[13];
   out_8540102027610099[1] = state[11] + state[14];
   out_8540102027610099[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_1405536358766626176) {
   out_1405536358766626176[0] = 0;
   out_1405536358766626176[1] = 0;
   out_1405536358766626176[2] = 0;
   out_1405536358766626176[3] = 0;
   out_1405536358766626176[4] = 0;
   out_1405536358766626176[5] = 0;
   out_1405536358766626176[6] = 0;
   out_1405536358766626176[7] = 0;
   out_1405536358766626176[8] = 0;
   out_1405536358766626176[9] = 0;
   out_1405536358766626176[10] = 1;
   out_1405536358766626176[11] = 0;
   out_1405536358766626176[12] = 0;
   out_1405536358766626176[13] = 1;
   out_1405536358766626176[14] = 0;
   out_1405536358766626176[15] = 0;
   out_1405536358766626176[16] = 0;
   out_1405536358766626176[17] = 0;
   out_1405536358766626176[18] = 0;
   out_1405536358766626176[19] = 0;
   out_1405536358766626176[20] = 0;
   out_1405536358766626176[21] = 0;
   out_1405536358766626176[22] = 0;
   out_1405536358766626176[23] = 0;
   out_1405536358766626176[24] = 0;
   out_1405536358766626176[25] = 0;
   out_1405536358766626176[26] = 0;
   out_1405536358766626176[27] = 0;
   out_1405536358766626176[28] = 0;
   out_1405536358766626176[29] = 0;
   out_1405536358766626176[30] = 0;
   out_1405536358766626176[31] = 0;
   out_1405536358766626176[32] = 0;
   out_1405536358766626176[33] = 0;
   out_1405536358766626176[34] = 1;
   out_1405536358766626176[35] = 0;
   out_1405536358766626176[36] = 0;
   out_1405536358766626176[37] = 1;
   out_1405536358766626176[38] = 0;
   out_1405536358766626176[39] = 0;
   out_1405536358766626176[40] = 0;
   out_1405536358766626176[41] = 0;
   out_1405536358766626176[42] = 0;
   out_1405536358766626176[43] = 0;
   out_1405536358766626176[44] = 0;
   out_1405536358766626176[45] = 0;
   out_1405536358766626176[46] = 0;
   out_1405536358766626176[47] = 0;
   out_1405536358766626176[48] = 0;
   out_1405536358766626176[49] = 0;
   out_1405536358766626176[50] = 0;
   out_1405536358766626176[51] = 0;
   out_1405536358766626176[52] = 0;
   out_1405536358766626176[53] = 0;
   out_1405536358766626176[54] = 0;
   out_1405536358766626176[55] = 0;
   out_1405536358766626176[56] = 0;
   out_1405536358766626176[57] = 0;
   out_1405536358766626176[58] = 1;
   out_1405536358766626176[59] = 0;
   out_1405536358766626176[60] = 0;
   out_1405536358766626176[61] = 1;
   out_1405536358766626176[62] = 0;
   out_1405536358766626176[63] = 0;
   out_1405536358766626176[64] = 0;
   out_1405536358766626176[65] = 0;
   out_1405536358766626176[66] = 0;
   out_1405536358766626176[67] = 0;
   out_1405536358766626176[68] = 0;
}
void h_9(double *state, double *unused, double *out_1977128371001968200) {
   out_1977128371001968200[0] = state[10];
   out_1977128371001968200[1] = state[11];
   out_1977128371001968200[2] = state[12];
}
void H_9(double *state, double *unused, double *out_3728041902637482146) {
   out_3728041902637482146[0] = 0;
   out_3728041902637482146[1] = 0;
   out_3728041902637482146[2] = 0;
   out_3728041902637482146[3] = 0;
   out_3728041902637482146[4] = 0;
   out_3728041902637482146[5] = 0;
   out_3728041902637482146[6] = 0;
   out_3728041902637482146[7] = 0;
   out_3728041902637482146[8] = 0;
   out_3728041902637482146[9] = 0;
   out_3728041902637482146[10] = 1;
   out_3728041902637482146[11] = 0;
   out_3728041902637482146[12] = 0;
   out_3728041902637482146[13] = 0;
   out_3728041902637482146[14] = 0;
   out_3728041902637482146[15] = 0;
   out_3728041902637482146[16] = 0;
   out_3728041902637482146[17] = 0;
   out_3728041902637482146[18] = 0;
   out_3728041902637482146[19] = 0;
   out_3728041902637482146[20] = 0;
   out_3728041902637482146[21] = 0;
   out_3728041902637482146[22] = 0;
   out_3728041902637482146[23] = 0;
   out_3728041902637482146[24] = 0;
   out_3728041902637482146[25] = 0;
   out_3728041902637482146[26] = 0;
   out_3728041902637482146[27] = 0;
   out_3728041902637482146[28] = 0;
   out_3728041902637482146[29] = 0;
   out_3728041902637482146[30] = 0;
   out_3728041902637482146[31] = 0;
   out_3728041902637482146[32] = 0;
   out_3728041902637482146[33] = 0;
   out_3728041902637482146[34] = 1;
   out_3728041902637482146[35] = 0;
   out_3728041902637482146[36] = 0;
   out_3728041902637482146[37] = 0;
   out_3728041902637482146[38] = 0;
   out_3728041902637482146[39] = 0;
   out_3728041902637482146[40] = 0;
   out_3728041902637482146[41] = 0;
   out_3728041902637482146[42] = 0;
   out_3728041902637482146[43] = 0;
   out_3728041902637482146[44] = 0;
   out_3728041902637482146[45] = 0;
   out_3728041902637482146[46] = 0;
   out_3728041902637482146[47] = 0;
   out_3728041902637482146[48] = 0;
   out_3728041902637482146[49] = 0;
   out_3728041902637482146[50] = 0;
   out_3728041902637482146[51] = 0;
   out_3728041902637482146[52] = 0;
   out_3728041902637482146[53] = 0;
   out_3728041902637482146[54] = 0;
   out_3728041902637482146[55] = 0;
   out_3728041902637482146[56] = 0;
   out_3728041902637482146[57] = 0;
   out_3728041902637482146[58] = 1;
   out_3728041902637482146[59] = 0;
   out_3728041902637482146[60] = 0;
   out_3728041902637482146[61] = 0;
   out_3728041902637482146[62] = 0;
   out_3728041902637482146[63] = 0;
   out_3728041902637482146[64] = 0;
   out_3728041902637482146[65] = 0;
   out_3728041902637482146[66] = 0;
   out_3728041902637482146[67] = 0;
   out_3728041902637482146[68] = 0;
}
void h_10(double *state, double *unused, double *out_5757918426375340444) {
   out_5757918426375340444[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[17];
   out_5757918426375340444[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[18];
   out_5757918426375340444[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[19];
}
void H_10(double *state, double *unused, double *out_2807340980368654320) {
   out_2807340980368654320[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2807340980368654320[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2807340980368654320[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_2807340980368654320[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2807340980368654320[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2807340980368654320[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2807340980368654320[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2807340980368654320[7] = 0;
   out_2807340980368654320[8] = 0;
   out_2807340980368654320[9] = 0;
   out_2807340980368654320[10] = 0;
   out_2807340980368654320[11] = 0;
   out_2807340980368654320[12] = 0;
   out_2807340980368654320[13] = 0;
   out_2807340980368654320[14] = 0;
   out_2807340980368654320[15] = 0;
   out_2807340980368654320[16] = 0;
   out_2807340980368654320[17] = 1;
   out_2807340980368654320[18] = 0;
   out_2807340980368654320[19] = 0;
   out_2807340980368654320[20] = 0;
   out_2807340980368654320[21] = 0;
   out_2807340980368654320[22] = 0;
   out_2807340980368654320[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_2807340980368654320[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2807340980368654320[25] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_2807340980368654320[26] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2807340980368654320[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2807340980368654320[28] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2807340980368654320[29] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2807340980368654320[30] = 0;
   out_2807340980368654320[31] = 0;
   out_2807340980368654320[32] = 0;
   out_2807340980368654320[33] = 0;
   out_2807340980368654320[34] = 0;
   out_2807340980368654320[35] = 0;
   out_2807340980368654320[36] = 0;
   out_2807340980368654320[37] = 0;
   out_2807340980368654320[38] = 0;
   out_2807340980368654320[39] = 0;
   out_2807340980368654320[40] = 0;
   out_2807340980368654320[41] = 1;
   out_2807340980368654320[42] = 0;
   out_2807340980368654320[43] = 0;
   out_2807340980368654320[44] = 0;
   out_2807340980368654320[45] = 0;
   out_2807340980368654320[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_2807340980368654320[47] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_2807340980368654320[48] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2807340980368654320[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_2807340980368654320[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_2807340980368654320[51] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_2807340980368654320[52] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_2807340980368654320[53] = 0;
   out_2807340980368654320[54] = 0;
   out_2807340980368654320[55] = 0;
   out_2807340980368654320[56] = 0;
   out_2807340980368654320[57] = 0;
   out_2807340980368654320[58] = 0;
   out_2807340980368654320[59] = 0;
   out_2807340980368654320[60] = 0;
   out_2807340980368654320[61] = 0;
   out_2807340980368654320[62] = 0;
   out_2807340980368654320[63] = 0;
   out_2807340980368654320[64] = 0;
   out_2807340980368654320[65] = 1;
   out_2807340980368654320[66] = 0;
   out_2807340980368654320[67] = 0;
   out_2807340980368654320[68] = 0;
}
void h_12(double *state, double *unused, double *out_276606852640741133) {
   out_276606852640741133[0] = state[0];
   out_276606852640741133[1] = state[1];
   out_276606852640741133[2] = state[2];
}
void H_12(double *state, double *unused, double *out_3512091870505835745) {
   out_3512091870505835745[0] = 1;
   out_3512091870505835745[1] = 0;
   out_3512091870505835745[2] = 0;
   out_3512091870505835745[3] = 0;
   out_3512091870505835745[4] = 0;
   out_3512091870505835745[5] = 0;
   out_3512091870505835745[6] = 0;
   out_3512091870505835745[7] = 0;
   out_3512091870505835745[8] = 0;
   out_3512091870505835745[9] = 0;
   out_3512091870505835745[10] = 0;
   out_3512091870505835745[11] = 0;
   out_3512091870505835745[12] = 0;
   out_3512091870505835745[13] = 0;
   out_3512091870505835745[14] = 0;
   out_3512091870505835745[15] = 0;
   out_3512091870505835745[16] = 0;
   out_3512091870505835745[17] = 0;
   out_3512091870505835745[18] = 0;
   out_3512091870505835745[19] = 0;
   out_3512091870505835745[20] = 0;
   out_3512091870505835745[21] = 0;
   out_3512091870505835745[22] = 0;
   out_3512091870505835745[23] = 0;
   out_3512091870505835745[24] = 1;
   out_3512091870505835745[25] = 0;
   out_3512091870505835745[26] = 0;
   out_3512091870505835745[27] = 0;
   out_3512091870505835745[28] = 0;
   out_3512091870505835745[29] = 0;
   out_3512091870505835745[30] = 0;
   out_3512091870505835745[31] = 0;
   out_3512091870505835745[32] = 0;
   out_3512091870505835745[33] = 0;
   out_3512091870505835745[34] = 0;
   out_3512091870505835745[35] = 0;
   out_3512091870505835745[36] = 0;
   out_3512091870505835745[37] = 0;
   out_3512091870505835745[38] = 0;
   out_3512091870505835745[39] = 0;
   out_3512091870505835745[40] = 0;
   out_3512091870505835745[41] = 0;
   out_3512091870505835745[42] = 0;
   out_3512091870505835745[43] = 0;
   out_3512091870505835745[44] = 0;
   out_3512091870505835745[45] = 0;
   out_3512091870505835745[46] = 0;
   out_3512091870505835745[47] = 0;
   out_3512091870505835745[48] = 1;
   out_3512091870505835745[49] = 0;
   out_3512091870505835745[50] = 0;
   out_3512091870505835745[51] = 0;
   out_3512091870505835745[52] = 0;
   out_3512091870505835745[53] = 0;
   out_3512091870505835745[54] = 0;
   out_3512091870505835745[55] = 0;
   out_3512091870505835745[56] = 0;
   out_3512091870505835745[57] = 0;
   out_3512091870505835745[58] = 0;
   out_3512091870505835745[59] = 0;
   out_3512091870505835745[60] = 0;
   out_3512091870505835745[61] = 0;
   out_3512091870505835745[62] = 0;
   out_3512091870505835745[63] = 0;
   out_3512091870505835745[64] = 0;
   out_3512091870505835745[65] = 0;
   out_3512091870505835745[66] = 0;
   out_3512091870505835745[67] = 0;
   out_3512091870505835745[68] = 0;
}
void h_31(double *state, double *unused, double *out_552123329346621541) {
   out_552123329346621541[0] = state[7];
   out_552123329346621541[1] = state[8];
   out_552123329346621541[2] = state[9];
}
void H_31(double *state, double *unused, double *out_837002095362415924) {
   out_837002095362415924[0] = 0;
   out_837002095362415924[1] = 0;
   out_837002095362415924[2] = 0;
   out_837002095362415924[3] = 0;
   out_837002095362415924[4] = 0;
   out_837002095362415924[5] = 0;
   out_837002095362415924[6] = 0;
   out_837002095362415924[7] = 1;
   out_837002095362415924[8] = 0;
   out_837002095362415924[9] = 0;
   out_837002095362415924[10] = 0;
   out_837002095362415924[11] = 0;
   out_837002095362415924[12] = 0;
   out_837002095362415924[13] = 0;
   out_837002095362415924[14] = 0;
   out_837002095362415924[15] = 0;
   out_837002095362415924[16] = 0;
   out_837002095362415924[17] = 0;
   out_837002095362415924[18] = 0;
   out_837002095362415924[19] = 0;
   out_837002095362415924[20] = 0;
   out_837002095362415924[21] = 0;
   out_837002095362415924[22] = 0;
   out_837002095362415924[23] = 0;
   out_837002095362415924[24] = 0;
   out_837002095362415924[25] = 0;
   out_837002095362415924[26] = 0;
   out_837002095362415924[27] = 0;
   out_837002095362415924[28] = 0;
   out_837002095362415924[29] = 0;
   out_837002095362415924[30] = 0;
   out_837002095362415924[31] = 1;
   out_837002095362415924[32] = 0;
   out_837002095362415924[33] = 0;
   out_837002095362415924[34] = 0;
   out_837002095362415924[35] = 0;
   out_837002095362415924[36] = 0;
   out_837002095362415924[37] = 0;
   out_837002095362415924[38] = 0;
   out_837002095362415924[39] = 0;
   out_837002095362415924[40] = 0;
   out_837002095362415924[41] = 0;
   out_837002095362415924[42] = 0;
   out_837002095362415924[43] = 0;
   out_837002095362415924[44] = 0;
   out_837002095362415924[45] = 0;
   out_837002095362415924[46] = 0;
   out_837002095362415924[47] = 0;
   out_837002095362415924[48] = 0;
   out_837002095362415924[49] = 0;
   out_837002095362415924[50] = 0;
   out_837002095362415924[51] = 0;
   out_837002095362415924[52] = 0;
   out_837002095362415924[53] = 0;
   out_837002095362415924[54] = 0;
   out_837002095362415924[55] = 1;
   out_837002095362415924[56] = 0;
   out_837002095362415924[57] = 0;
   out_837002095362415924[58] = 0;
   out_837002095362415924[59] = 0;
   out_837002095362415924[60] = 0;
   out_837002095362415924[61] = 0;
   out_837002095362415924[62] = 0;
   out_837002095362415924[63] = 0;
   out_837002095362415924[64] = 0;
   out_837002095362415924[65] = 0;
   out_837002095362415924[66] = 0;
   out_837002095362415924[67] = 0;
   out_837002095362415924[68] = 0;
}
void h_32(double *state, double *unused, double *out_3049938672845674483) {
   out_3049938672845674483[0] = state[3];
   out_3049938672845674483[1] = state[4];
   out_3049938672845674483[2] = state[5];
   out_3049938672845674483[3] = state[6];
}
void H_32(double *state, double *unused, double *out_5094531309091300737) {
   out_5094531309091300737[0] = 0;
   out_5094531309091300737[1] = 0;
   out_5094531309091300737[2] = 0;
   out_5094531309091300737[3] = 1;
   out_5094531309091300737[4] = 0;
   out_5094531309091300737[5] = 0;
   out_5094531309091300737[6] = 0;
   out_5094531309091300737[7] = 0;
   out_5094531309091300737[8] = 0;
   out_5094531309091300737[9] = 0;
   out_5094531309091300737[10] = 0;
   out_5094531309091300737[11] = 0;
   out_5094531309091300737[12] = 0;
   out_5094531309091300737[13] = 0;
   out_5094531309091300737[14] = 0;
   out_5094531309091300737[15] = 0;
   out_5094531309091300737[16] = 0;
   out_5094531309091300737[17] = 0;
   out_5094531309091300737[18] = 0;
   out_5094531309091300737[19] = 0;
   out_5094531309091300737[20] = 0;
   out_5094531309091300737[21] = 0;
   out_5094531309091300737[22] = 0;
   out_5094531309091300737[23] = 0;
   out_5094531309091300737[24] = 0;
   out_5094531309091300737[25] = 0;
   out_5094531309091300737[26] = 0;
   out_5094531309091300737[27] = 1;
   out_5094531309091300737[28] = 0;
   out_5094531309091300737[29] = 0;
   out_5094531309091300737[30] = 0;
   out_5094531309091300737[31] = 0;
   out_5094531309091300737[32] = 0;
   out_5094531309091300737[33] = 0;
   out_5094531309091300737[34] = 0;
   out_5094531309091300737[35] = 0;
   out_5094531309091300737[36] = 0;
   out_5094531309091300737[37] = 0;
   out_5094531309091300737[38] = 0;
   out_5094531309091300737[39] = 0;
   out_5094531309091300737[40] = 0;
   out_5094531309091300737[41] = 0;
   out_5094531309091300737[42] = 0;
   out_5094531309091300737[43] = 0;
   out_5094531309091300737[44] = 0;
   out_5094531309091300737[45] = 0;
   out_5094531309091300737[46] = 0;
   out_5094531309091300737[47] = 0;
   out_5094531309091300737[48] = 0;
   out_5094531309091300737[49] = 0;
   out_5094531309091300737[50] = 0;
   out_5094531309091300737[51] = 1;
   out_5094531309091300737[52] = 0;
   out_5094531309091300737[53] = 0;
   out_5094531309091300737[54] = 0;
   out_5094531309091300737[55] = 0;
   out_5094531309091300737[56] = 0;
   out_5094531309091300737[57] = 0;
   out_5094531309091300737[58] = 0;
   out_5094531309091300737[59] = 0;
   out_5094531309091300737[60] = 0;
   out_5094531309091300737[61] = 0;
   out_5094531309091300737[62] = 0;
   out_5094531309091300737[63] = 0;
   out_5094531309091300737[64] = 0;
   out_5094531309091300737[65] = 0;
   out_5094531309091300737[66] = 0;
   out_5094531309091300737[67] = 0;
   out_5094531309091300737[68] = 0;
   out_5094531309091300737[69] = 0;
   out_5094531309091300737[70] = 0;
   out_5094531309091300737[71] = 0;
   out_5094531309091300737[72] = 0;
   out_5094531309091300737[73] = 0;
   out_5094531309091300737[74] = 0;
   out_5094531309091300737[75] = 1;
   out_5094531309091300737[76] = 0;
   out_5094531309091300737[77] = 0;
   out_5094531309091300737[78] = 0;
   out_5094531309091300737[79] = 0;
   out_5094531309091300737[80] = 0;
   out_5094531309091300737[81] = 0;
   out_5094531309091300737[82] = 0;
   out_5094531309091300737[83] = 0;
   out_5094531309091300737[84] = 0;
   out_5094531309091300737[85] = 0;
   out_5094531309091300737[86] = 0;
   out_5094531309091300737[87] = 0;
   out_5094531309091300737[88] = 0;
   out_5094531309091300737[89] = 0;
   out_5094531309091300737[90] = 0;
   out_5094531309091300737[91] = 0;
}
void h_13(double *state, double *unused, double *out_4676866542797813623) {
   out_4676866542797813623[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_4676866542797813623[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_4676866542797813623[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2474068813600300595) {
   out_2474068813600300595[0] = 0;
   out_2474068813600300595[1] = 0;
   out_2474068813600300595[2] = 0;
   out_2474068813600300595[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2474068813600300595[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2474068813600300595[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2474068813600300595[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2474068813600300595[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2474068813600300595[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2474068813600300595[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2474068813600300595[10] = 0;
   out_2474068813600300595[11] = 0;
   out_2474068813600300595[12] = 0;
   out_2474068813600300595[13] = 0;
   out_2474068813600300595[14] = 0;
   out_2474068813600300595[15] = 0;
   out_2474068813600300595[16] = 0;
   out_2474068813600300595[17] = 0;
   out_2474068813600300595[18] = 0;
   out_2474068813600300595[19] = 0;
   out_2474068813600300595[20] = 0;
   out_2474068813600300595[21] = 0;
   out_2474068813600300595[22] = 0;
   out_2474068813600300595[23] = 0;
   out_2474068813600300595[24] = 0;
   out_2474068813600300595[25] = 0;
   out_2474068813600300595[26] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2474068813600300595[27] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2474068813600300595[28] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2474068813600300595[29] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2474068813600300595[30] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2474068813600300595[31] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2474068813600300595[32] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2474068813600300595[33] = 0;
   out_2474068813600300595[34] = 0;
   out_2474068813600300595[35] = 0;
   out_2474068813600300595[36] = 0;
   out_2474068813600300595[37] = 0;
   out_2474068813600300595[38] = 0;
   out_2474068813600300595[39] = 0;
   out_2474068813600300595[40] = 0;
   out_2474068813600300595[41] = 0;
   out_2474068813600300595[42] = 0;
   out_2474068813600300595[43] = 0;
   out_2474068813600300595[44] = 0;
   out_2474068813600300595[45] = 0;
   out_2474068813600300595[46] = 0;
   out_2474068813600300595[47] = 0;
   out_2474068813600300595[48] = 0;
   out_2474068813600300595[49] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2474068813600300595[50] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2474068813600300595[51] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2474068813600300595[52] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2474068813600300595[53] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2474068813600300595[54] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2474068813600300595[55] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2474068813600300595[56] = 0;
   out_2474068813600300595[57] = 0;
   out_2474068813600300595[58] = 0;
   out_2474068813600300595[59] = 0;
   out_2474068813600300595[60] = 0;
   out_2474068813600300595[61] = 0;
   out_2474068813600300595[62] = 0;
   out_2474068813600300595[63] = 0;
   out_2474068813600300595[64] = 0;
   out_2474068813600300595[65] = 0;
   out_2474068813600300595[66] = 0;
   out_2474068813600300595[67] = 0;
   out_2474068813600300595[68] = 0;
}
void h_14(double *state, double *unused, double *out_1977128371001968200) {
   out_1977128371001968200[0] = state[10];
   out_1977128371001968200[1] = state[11];
   out_1977128371001968200[2] = state[12];
}
void H_14(double *state, double *unused, double *out_3728041902637482146) {
   out_3728041902637482146[0] = 0;
   out_3728041902637482146[1] = 0;
   out_3728041902637482146[2] = 0;
   out_3728041902637482146[3] = 0;
   out_3728041902637482146[4] = 0;
   out_3728041902637482146[5] = 0;
   out_3728041902637482146[6] = 0;
   out_3728041902637482146[7] = 0;
   out_3728041902637482146[8] = 0;
   out_3728041902637482146[9] = 0;
   out_3728041902637482146[10] = 1;
   out_3728041902637482146[11] = 0;
   out_3728041902637482146[12] = 0;
   out_3728041902637482146[13] = 0;
   out_3728041902637482146[14] = 0;
   out_3728041902637482146[15] = 0;
   out_3728041902637482146[16] = 0;
   out_3728041902637482146[17] = 0;
   out_3728041902637482146[18] = 0;
   out_3728041902637482146[19] = 0;
   out_3728041902637482146[20] = 0;
   out_3728041902637482146[21] = 0;
   out_3728041902637482146[22] = 0;
   out_3728041902637482146[23] = 0;
   out_3728041902637482146[24] = 0;
   out_3728041902637482146[25] = 0;
   out_3728041902637482146[26] = 0;
   out_3728041902637482146[27] = 0;
   out_3728041902637482146[28] = 0;
   out_3728041902637482146[29] = 0;
   out_3728041902637482146[30] = 0;
   out_3728041902637482146[31] = 0;
   out_3728041902637482146[32] = 0;
   out_3728041902637482146[33] = 0;
   out_3728041902637482146[34] = 1;
   out_3728041902637482146[35] = 0;
   out_3728041902637482146[36] = 0;
   out_3728041902637482146[37] = 0;
   out_3728041902637482146[38] = 0;
   out_3728041902637482146[39] = 0;
   out_3728041902637482146[40] = 0;
   out_3728041902637482146[41] = 0;
   out_3728041902637482146[42] = 0;
   out_3728041902637482146[43] = 0;
   out_3728041902637482146[44] = 0;
   out_3728041902637482146[45] = 0;
   out_3728041902637482146[46] = 0;
   out_3728041902637482146[47] = 0;
   out_3728041902637482146[48] = 0;
   out_3728041902637482146[49] = 0;
   out_3728041902637482146[50] = 0;
   out_3728041902637482146[51] = 0;
   out_3728041902637482146[52] = 0;
   out_3728041902637482146[53] = 0;
   out_3728041902637482146[54] = 0;
   out_3728041902637482146[55] = 0;
   out_3728041902637482146[56] = 0;
   out_3728041902637482146[57] = 0;
   out_3728041902637482146[58] = 1;
   out_3728041902637482146[59] = 0;
   out_3728041902637482146[60] = 0;
   out_3728041902637482146[61] = 0;
   out_3728041902637482146[62] = 0;
   out_3728041902637482146[63] = 0;
   out_3728041902637482146[64] = 0;
   out_3728041902637482146[65] = 0;
   out_3728041902637482146[66] = 0;
   out_3728041902637482146[67] = 0;
   out_3728041902637482146[68] = 0;
}
void h_19(double *state, double *unused, double *out_5172964960218397550) {
   out_5172964960218397550[0] = state[20];
   out_5172964960218397550[1] = state[21];
   out_5172964960218397550[2] = state[22];
}
void H_19(double *state, double *unused, double *out_8160721753739913327) {
   out_8160721753739913327[0] = 0;
   out_8160721753739913327[1] = 0;
   out_8160721753739913327[2] = 0;
   out_8160721753739913327[3] = 0;
   out_8160721753739913327[4] = 0;
   out_8160721753739913327[5] = 0;
   out_8160721753739913327[6] = 0;
   out_8160721753739913327[7] = 0;
   out_8160721753739913327[8] = 0;
   out_8160721753739913327[9] = 0;
   out_8160721753739913327[10] = 0;
   out_8160721753739913327[11] = 0;
   out_8160721753739913327[12] = 0;
   out_8160721753739913327[13] = 0;
   out_8160721753739913327[14] = 0;
   out_8160721753739913327[15] = 0;
   out_8160721753739913327[16] = 0;
   out_8160721753739913327[17] = 0;
   out_8160721753739913327[18] = 0;
   out_8160721753739913327[19] = 0;
   out_8160721753739913327[20] = 1;
   out_8160721753739913327[21] = 0;
   out_8160721753739913327[22] = 0;
   out_8160721753739913327[23] = 0;
   out_8160721753739913327[24] = 0;
   out_8160721753739913327[25] = 0;
   out_8160721753739913327[26] = 0;
   out_8160721753739913327[27] = 0;
   out_8160721753739913327[28] = 0;
   out_8160721753739913327[29] = 0;
   out_8160721753739913327[30] = 0;
   out_8160721753739913327[31] = 0;
   out_8160721753739913327[32] = 0;
   out_8160721753739913327[33] = 0;
   out_8160721753739913327[34] = 0;
   out_8160721753739913327[35] = 0;
   out_8160721753739913327[36] = 0;
   out_8160721753739913327[37] = 0;
   out_8160721753739913327[38] = 0;
   out_8160721753739913327[39] = 0;
   out_8160721753739913327[40] = 0;
   out_8160721753739913327[41] = 0;
   out_8160721753739913327[42] = 0;
   out_8160721753739913327[43] = 0;
   out_8160721753739913327[44] = 1;
   out_8160721753739913327[45] = 0;
   out_8160721753739913327[46] = 0;
   out_8160721753739913327[47] = 0;
   out_8160721753739913327[48] = 0;
   out_8160721753739913327[49] = 0;
   out_8160721753739913327[50] = 0;
   out_8160721753739913327[51] = 0;
   out_8160721753739913327[52] = 0;
   out_8160721753739913327[53] = 0;
   out_8160721753739913327[54] = 0;
   out_8160721753739913327[55] = 0;
   out_8160721753739913327[56] = 0;
   out_8160721753739913327[57] = 0;
   out_8160721753739913327[58] = 0;
   out_8160721753739913327[59] = 0;
   out_8160721753739913327[60] = 0;
   out_8160721753739913327[61] = 0;
   out_8160721753739913327[62] = 0;
   out_8160721753739913327[63] = 0;
   out_8160721753739913327[64] = 0;
   out_8160721753739913327[65] = 0;
   out_8160721753739913327[66] = 0;
   out_8160721753739913327[67] = 0;
   out_8160721753739913327[68] = 1;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_3(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<1, 3, 0>(in_x, in_P, h_3, H_3, NULL, in_z, in_R, in_ea, MAHA_THRESH_3);
}
void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_19(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_19, H_19, NULL, in_z, in_R, in_ea, MAHA_THRESH_19);
}
void live_H(double *in_vec, double *out_8729358110465776939) {
  H(in_vec, out_8729358110465776939);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6985748779881356812) {
  err_fun(nom_x, delta_x, out_6985748779881356812);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_7782584527847184999) {
  inv_err_fun(nom_x, true_x, out_7782584527847184999);
}
void live_H_mod_fun(double *state, double *out_2807386512015406) {
  H_mod_fun(state, out_2807386512015406);
}
void live_f_fun(double *state, double dt, double *out_460231330011564285) {
  f_fun(state,  dt, out_460231330011564285);
}
void live_F_fun(double *state, double dt, double *out_2331054952450132772) {
  F_fun(state,  dt, out_2331054952450132772);
}
void live_h_3(double *state, double *unused, double *out_8586752585035404355) {
  h_3(state, unused, out_8586752585035404355);
}
void live_H_3(double *state, double *unused, double *out_5698610554807408040) {
  H_3(state, unused, out_5698610554807408040);
}
void live_h_4(double *state, double *unused, double *out_8540102027610099) {
  h_4(state, unused, out_8540102027610099);
}
void live_H_4(double *state, double *unused, double *out_1405536358766626176) {
  H_4(state, unused, out_1405536358766626176);
}
void live_h_9(double *state, double *unused, double *out_1977128371001968200) {
  h_9(state, unused, out_1977128371001968200);
}
void live_H_9(double *state, double *unused, double *out_3728041902637482146) {
  H_9(state, unused, out_3728041902637482146);
}
void live_h_10(double *state, double *unused, double *out_5757918426375340444) {
  h_10(state, unused, out_5757918426375340444);
}
void live_H_10(double *state, double *unused, double *out_2807340980368654320) {
  H_10(state, unused, out_2807340980368654320);
}
void live_h_12(double *state, double *unused, double *out_276606852640741133) {
  h_12(state, unused, out_276606852640741133);
}
void live_H_12(double *state, double *unused, double *out_3512091870505835745) {
  H_12(state, unused, out_3512091870505835745);
}
void live_h_31(double *state, double *unused, double *out_552123329346621541) {
  h_31(state, unused, out_552123329346621541);
}
void live_H_31(double *state, double *unused, double *out_837002095362415924) {
  H_31(state, unused, out_837002095362415924);
}
void live_h_32(double *state, double *unused, double *out_3049938672845674483) {
  h_32(state, unused, out_3049938672845674483);
}
void live_H_32(double *state, double *unused, double *out_5094531309091300737) {
  H_32(state, unused, out_5094531309091300737);
}
void live_h_13(double *state, double *unused, double *out_4676866542797813623) {
  h_13(state, unused, out_4676866542797813623);
}
void live_H_13(double *state, double *unused, double *out_2474068813600300595) {
  H_13(state, unused, out_2474068813600300595);
}
void live_h_14(double *state, double *unused, double *out_1977128371001968200) {
  h_14(state, unused, out_1977128371001968200);
}
void live_H_14(double *state, double *unused, double *out_3728041902637482146) {
  H_14(state, unused, out_3728041902637482146);
}
void live_h_19(double *state, double *unused, double *out_5172964960218397550) {
  h_19(state, unused, out_5172964960218397550);
}
void live_H_19(double *state, double *unused, double *out_8160721753739913327) {
  H_19(state, unused, out_8160721753739913327);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 3, 4, 9, 10, 12, 31, 32, 13, 14, 19 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 3, live_h_3 },
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 19, live_h_19 },
  },
  .Hs = {
    { 3, live_H_3 },
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 19, live_H_19 },
  },
  .updates = {
    { 3, live_update_3 },
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 19, live_update_19 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
